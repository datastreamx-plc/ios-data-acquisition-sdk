// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target x86_64-apple-ios9.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name QDPublisher
import AdSupport
import CommonCrypto
import CoreLocation
import Foundation
import Gzip
import Swift
import UIKit
public protocol LoggerEvent {
  func logger(_ key: Swift.String, log: Swift.String)
}
@objc public protocol PublisherDelegate : QDPublisher.LocationServiceDelegate {
  @objc func publisherOnError(error: Swift.Error)
  @objc func publisherOnSuccessTracking()
}
@_hasMissingDesignatedInitializers @objc public class Publisher : ObjectiveC.NSObject {
  @objc public static let shared: QDPublisher.Publisher
  @objc weak public var delegate: QDPublisher.PublisherDelegate? {
    @objc get
    @objc set
  }
  @objc public var disableAlertWhenUserDenied: Swift.Bool {
    @objc get
    @objc set
  }
  @objc public var requestAccessAlertTitle: Swift.String {
    @objc get
    @objc set
  }
  @objc public var requestAccessAlertMessage: Swift.String {
    @objc get
    @objc set
  }
  @objc public var debug: Swift.Bool {
    @objc get
    @objc set
  }
  @objc public func setup(_ integrationKey: Swift.String)
  @objc public func track(generic passedParams: [Swift.String : Any])
  @objc public func startTrackingLocation()
  @objc deinit
  @objc override dynamic public init()
}
@objc public protocol LocationServiceDelegate {
  @objc func publisherControllreParent() -> UIKit.UIViewController?
  @objc optional func publisherWillShowCustomAlert()
  @objc optional func publisherDidFinishShowCustomAlert()
}
